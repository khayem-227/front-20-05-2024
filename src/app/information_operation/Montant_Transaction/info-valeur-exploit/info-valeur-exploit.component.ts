import { Component, OnInit } from '@angular/core';
import { FormGroup, FormBuilder, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { countries } from 'countries-list';
import { LigneValeurExploitation } from '../../../classes/valeur exploitation/ligne-valeur-exploitation';
import { ValeurExploitation } from '../../../classes/valeur exploitation/valeur-exploitation';
import { ExploitationsService } from '../../../services/valeurs exploitations/exploitations.service';

@Component({
  selector: 'app-info-valeur-exploit',
  templateUrl: './info-valeur-exploit.component.html',
  styleUrl: './info-valeur-exploit.component.css'
})
export class InfoValeurExploitComponent implements OnInit {
  form!: FormGroup;
  countriesList: string[] = [];
  ligneExploitation!:LigneValeurExploitation;
  exploitation!:ValeurExploitation;

  constructor(private router: Router, private formBuilder: FormBuilder, private ex: ExploitationsService) { }

  ngOnInit(): void {
   
    this.form = this.formBuilder.group({
      // Define form controls including 'nationalite'
      achatsDepenses: ['', Validators.required],
      ventesRevenus: ['', Validators.required],
      raisonSociale: ['', Validators.required],
      natureOperation: ['', Validators.required], 
      autreNatureOperation: ['', Validators.required], 
      identifiant: [''], 
      etatTerritoire: [''], 
      matriculeFiscal: [''], 
      qualite: ['', Validators.required],
      autreQualite: [''], 
      natureRelation: [''],
      autreNatureRelation: [''],
      methodeDeterminationPrixTransfert: ['', Validators.required],

      autreMethodeDeterminationPrixTransfert: ['', Validators.required],
      changementMethodeDeterminationPrixTransfert: ['', Validators.required],
      chnagementAutreMethodeDeterminationPrixTransfert: ['', Validators.required],
      
      totalAchatsDepensesValeursExploitation :['', Validators.required],
	
      totalVentesRevenusValeursExploitation:['', Validators.required],
      
      
    });
    this.countriesList = Object.values(countries).map((country: any) => country.name);

  }

  submit(): void {
    if (this.form.valid) {
     
      this.ligneExploitation = { ...this.form.value }; 
      this.exploitation = { ...this.form.value }; 
      console.log(this.ligneExploitation);
      this.ex.add(this.ligneExploitation).subscribe({
        next: (response) => {
          console.log('Success:', response);
          this.router.navigate(['/remuneration']);
         
   // Make sure this route is correctly configured in your routing module
        },
        error: (error) => {
          console.error('Erreur lors de l\'envoi des donnÃ©es:', error);
        }
      });


      this.ex.add2(this.exploitation).subscribe({
        next: (affirmationResponse) => {
          console.log('Affirmation Success:', affirmationResponse);
        },
        error: (error) => {
          console.error('Erreur lors de l\'affirmation:', error);
        }
      });

    }




  }




  
}
